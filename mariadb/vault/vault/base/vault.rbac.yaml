apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-agent-injector
  namespace: common-datastore
  labels:
    app.kubernetes.io/name: vault-agent-injector
    app.kubernetes.io/instance: vault
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault
  namespace: common-datastore
  labels:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vault-agent-injector-clusterrole
  labels:
    app.kubernetes.io/name: vault-agent-injector
    app.kubernetes.io/instance: vault
rules:
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["mutatingwebhookconfigurations"]
    verbs:
      - "get"
      - "list"
      - "watch"
      - "patch"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-agent-injector-binding
  labels:
    app.kubernetes.io/name: vault-agent-injector
    app.kubernetes.io/instance: vault
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vault-agent-injector-clusterrole
subjects:
  - kind: ServiceAccount
    name: vault-agent-injector
    namespace: common-datastore
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-server-binding
  labels:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: vault
    namespace: common-datastore
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: common-datastore
  name: vault-discovery-role
  labels:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/exec"]
    verbs: ["get", "watch", "list", "update", "patch", "create"]
  - apiGroups: [""]
    resources: ["configmaps", "secrets"]
    verbs: ["get", "create", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: vault-discovery-rolebinding
  namespace: common-datastore
  labels:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vault-discovery-role
subjects:
  - kind: ServiceAccount
    name: vault
    namespace: common-datastore
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: vault-agent-injector-cfg
  labels:
    app.kubernetes.io/name: vault-agent-injector
    app.kubernetes.io/instance: vault
webhooks:
  - name: vault.hashicorp.com
    sideEffects: None
    admissionReviewVersions:
      - "v1beta1"
      - "v1"
    clientConfig:
      service:
        name: vault-agent-injector-svc
        namespace: common-datastore
        path: "/mutate"
      caBundle: ""
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
    failurePolicy: Ignore
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vault-secret-role
  labels:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
rules:
  - apiGroups: [""]
    resources: ["configmaps", "secrets"]
    verbs: ["get", "create", "update", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-secret-binding
  labels:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vault-secret-role
subjects:
  - kind: ServiceAccount
    name: vault
    namespace: common-datastore
