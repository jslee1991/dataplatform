apiVersion: v1
kind: Service
metadata:
  name: vault-agent-injector-svc
  namespace: common-datastore
  labels:
    app.kubernetes.io/name: vault-agent-injector
    app.kubernetes.io/instance: vault
spec:
  ports:
    - name: https
      port: 443
      targetPort: 8080
  selector:
    app.kubernetes.io/name: vault-agent-injector
    app.kubernetes.io/instance: vault
    component: webhook
---
# Service for active Vault pod
apiVersion: v1
kind: Service
metadata:
  name: vault-active
  namespace: common-datastore
  labels:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
spec:
  publishNotReadyAddresses: true
  ports:
    - name: http-vault
      port: 8200
      targetPort: 8200
    - name: https-internal
      port: 8201
      targetPort: 8201
  selector:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
    component: server
    vault-active: "true"
---
# Service for standby Vault pod
apiVersion: v1
kind: Service
metadata:
  name: vault-standby
  namespace: common-datastore
  labels:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
spec:
  publishNotReadyAddresses: true
  ports:
    - name: http-vault
      port: 8200
      targetPort: 8200
    - name: https-internal
      port: 8201
      targetPort: 8201
  selector:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
    component: server
    vault-active: "false"
---
# Service for Vault cluster
apiVersion: v1
kind: Service
metadata:
  name: vault-internal
  namespace: common-datastore
  labels:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
spec:
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: http-vault
      port: 8200
      targetPort: 8200
    - name: https-internal
      port: 8201
      targetPort: 8201
  selector:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
    component: server
---
# Service for Vault cluster
apiVersion: v1
kind: Service
metadata:
  name: vault
  namespace: common-datastore
  labels:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
spec:
  # We want the servers to become available even if they're not ready
  # since this DNS is also used for join operations.
  publishNotReadyAddresses: true
  ports:
    - name: http-vault
      port: 8200
      targetPort: 8200
    - name: https-internal
      port: 8201
      targetPort: 8201
  selector:
    app.kubernetes.io/name: vault
    app.kubernetes.io/instance: vault
    component: server
