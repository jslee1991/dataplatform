apiVersion: v1
kind: ConfigMap
metadata:
  name: maestro-mariadb-ddl-sql-config
  namespace: common-datastore
data:
  maestro-ddl.sql: |
        USE maestro;
        create table API_WHITE_LIST
        (
            id     varchar(36)  default uuid() null,
            path   varchar(255)                null,
            method varchar(255) default 'GET'  null
        );

        create table MSTR_ASSIGNER_IN_WORKFLOW
        (
            id             varchar(36) default uuid()              not null,
            assign_user_id varchar(36)                             null,
            workflow_id    varchar(36)                             not null,
            assign_type    int         default 1                   null,
            create_time    timestamp   default current_timestamp() null
        );

        create table MSTR_AUTHORITY
        (
            id             varchar(36) default uuid() not null
                primary key,
            name           varchar(127)               not null,
            description    text                       null,
            selector       text                       null,
            service        varchar(127)               null,
            type           varchar(127)               null,
            create_user_id varchar(36)                null,
            update_user_id varchar(36)                null,
            create_time    timestamp                  null,
            update_time    timestamp                  null,
            status         int         default 0      null,
            solution       varchar(127)               null,
            constant       tinyint     default 0      null
        );

        create index MSTR_AUTHORITY_create_time_index
            on MSTR_AUTHORITY (create_time);

        create table MSTR_CATEGORY
        (
            id             varchar(36) default uuid() not null
                primary key,
            name           varchar(127)               null,
            description    varchar(255)               null,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            update_user_id varchar(36)                null,
            update_time    timestamp                  null,
            status         int         default 0      null
        );

        create table MSTR_ENDPOINT
        (
            id             varchar(36) default uuid() not null,
            name           varchar(127)               null,
            description    varchar(255)               null,
            uri            varchar(255)               null,
            solution_id    varchar(36)                not null,
            solution       varchar(127)               null,
            service        varchar(127)               null,
            type           varchar(127)               null,
            method         varchar(127)               null,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            update_user_id varchar(36)                null,
            update_time    timestamp                  null,
            status         int         default 0      null,
            constraint MSTR_ENDPOINT_pk
                unique (uri, method)
        );

        create index MSTR_ENDPOINT_create_time_index
            on MSTR_ENDPOINT (create_time);

        create table MSTR_ENDPOINT_IN_AUTHORITY
        (
            id           varchar(36) default uuid() not null,
            authority_id varchar(36) default uuid() not null,
            endpoint_id  varchar(36) default uuid() not null
        );

        create table MSTR_ENDPOINT_RESOURCE_TYPE
        (
            name        varchar(127) not null
                primary key,
            description varchar(255) null,
            selector    varchar(255) null
        );

        create table MSTR_ENDPOINT_SERVICE
        (
            name        varchar(127) not null
                primary key,
            description varchar(255) null,
            selector    varchar(255) null
        );

        create table MSTR_ENDPOINT_TYPE_IN_SERVICE
        (
            service varchar(127) not null,
            type    varchar(127) not null,
            primary key (service, type)
        );

        create index FK_MSTR_ENDPOINT_RESOURC
            on MSTR_ENDPOINT_TYPE_IN_SERVICE (type);

        create table MSTR_FIELD_IN_SECTION
        (
            id               varchar(36) default uuid() not null,
            name             varchar(127)               null,
            description      varchar(255)               null,
            create_user_id   varchar(36)                null,
            create_time      timestamp                  null,
            update_user_id   varchar(36)                null,
            update_time      timestamp                  null,
            status           int         default 0      null,
            section_id       varchar(36) default uuid() not null,
            `order`          int                        null,
            type_of_field_id varchar(36) default uuid() not null
        );

        create table MSTR_FOLDER
        (
            id             varchar(36) default uuid() not null
                primary key,
            name           varchar(127)               not null,
            description    text                       null,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            update_user_id varchar(36)                null,
            update_time    timestamp                  null,
            parent_id      varchar(36)                null,
            org_id         varchar(36)                null,
            depth          int                        not null,
            status         int         default 0      not null
        );

        create index MSTR_FOLDER_create_time_index
            on MSTR_FOLDER (create_time);

        create table MSTR_FOLDER_IN_SERVICE_CATALOG
        (
            id                 varchar(36) default uuid()              not null,
            folder_id          varchar(36)                             not null,
            service_catalog_id varchar(36)                             not null,
            create_time        timestamp   default current_timestamp() null
        );

        create table MSTR_INFRA_FOLDER
        (
            id             varchar(36) default uuid() not null
                primary key,
            name           varchar(127)               not null,
            description    text                       null,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            update_user_id varchar(36)                null,
            update_time    timestamp                  null,
            depth          int                        not null,
            parent_id      varchar(36)                null,
            root_infra_id  varchar(36)                null,
            status         int         default 0      null,
            constraint MSTR_INFRA_FOLDER_pk
                unique (parent_id, name),
            constraint MSTR_INFRA_FOLDER_MSTR_INFRA_FOLDER_id_fk
                foreign key (root_infra_id) references MSTR_INFRA_FOLDER (id),
            constraint MSTR_INFRA_FOLDER_parent_id_fk
                foreign key (parent_id) references MSTR_INFRA_FOLDER (id)
        );

        create index MSTR_INFRA_FOLDER_create_time_index
            on MSTR_INFRA_FOLDER (create_time);

        create table MSTR_NOTIFICATIONS
        (
            notification_id        varchar(255) default uuid()              not null comment '알림 ID'
                primary key,
            recipient_id           varchar(255)                             null comment '수신자 ID (외래 키)',
            recipient_service_type varchar(20)                              null comment '수신자 서비스 유형 비올라 콘트라베이스 뉴타닉스 피날레 기타외부',
            notification_type_id   varchar(20)                              null comment '알림 유형 email sns sms web 기타외부',
            notification_content   text                                     null comment '알림 내용',
            creation_time          datetime     default current_timestamp() null comment '알림 생성 시간',
            notification_status    varchar(20)                              null comment '알림 상태 읽음 안읽음',
            notification_level     varchar(20)                              null comment '알림 레벨 일반 경고 위험',
            notification_category  varchar(20)                              null comment '알림 종류 일반알림 동작알림 자원상태알림',
            reception_level        varchar(20)                              null comment '수신 레벨 전체수신, 그룹수신, 개별수신',
            toast_alarm_status     varchar(255)                             null comment '토스트 알람 상태값, 조회 쿼리이후 상태변경'
        )
            comment '알림 테이블';

        create table MSTR_PLATFORM
        (
            id             varchar(36) default uuid() not null
                primary key,
            solution_id    varchar(36)                null,
            name           varchar(127)               null,
            description    varchar(255)               null,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            update_user_id varchar(36)                null,
            update_time    timestamp                  null,
            status         int         default 0      null
        );

        create table MSTR_PROVIDER_TYPE
        (
            id          int           not null
                primary key,
            name        varchar(127)  null,
            public      int default 1 null,
            description varchar(127)  null,
            is_active   int default 1 not null
        );

        create table MSTR_PROVIDER
        (
            id             varchar(36) default uuid() not null
                primary key,
            name           varchar(127)               not null,
            description    text                       null,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            update_user_id varchar(36)                null,
            update_time    timestamp                  null,
            parent_id      varchar(36)                null,
            root_infra_id  varchar(36)                null,
            status         int         default 0      null,
            type           int         default 1      null,
            platform_type  int         default 0      null,
            url            varchar(127)               null,
            place          varchar(255)               null,
            constraint MSTR_PROVIDER_MSTR_PROVIDER_TYPE_null_fk
                foreign key (type) references MSTR_PROVIDER_TYPE (id)
        );

        create index MSTR_PROVIDER_create_time_index
            on MSTR_PROVIDER (create_time);

        create table MSTR_REQUEST_OF_SERVICE
        (
            id                             varchar(36) default uuid() not null,
            name                           varchar(127)               null,
            description                    varchar(255)               null,
            create_user_id                 varchar(36)                null,
            create_time                    timestamp                  null,
            update_user_id                 varchar(36)                null,
            update_time                    timestamp                  null,
            status                         int         default 0      null,
            assign_user_id                 varchar(36)                null,
            expect_complete_time           timestamp                  null,
            content                        text                       null,
            template_request_of_service_id varchar(36)                not null
        );

        create table MSTR_REQUEST_OF_SERVICE_OBJECT
        (
            id                  varchar(36) default uuid() not null,
            name                varchar(127)               null,
            description         text                       null,
            create_user_id      varchar(36)                not null,
            create_time         timestamp                  null,
            update_user_id      varchar(36)                null,
            update_time         timestamp                  null on update current_timestamp(),
            status              int         default 0      null,
            service_object_id   varchar(36) default uuid() null comment '추후 분리해야함',
            request_user_id     varchar(36) default uuid() null,
            manager_id          varchar(36)                null,
            provider_id         varchar(36) default uuid() null,
            tenant_id           varchar(36) default uuid() null,
            request_time        timestamp                  null,
            desired_end_time    timestamp                  null,
            content             varchar(1000)              null,
            type                int         default 0      null,
            file_path           varchar(255)               null,
            variables           text                       null,
            approve_time        timestamp                  null,
            progress_time       timestamp                  null,
            end_time            timestamp                  null,
            detail              text                       null,
            provision_file_path varchar(255)               null,
            provision_log       text                       null,
            yaml                text                       null,
            folder_id           varchar(36) default uuid() null
        );

        create table MSTR_RESOURCE_TYPE
        (
            id   varchar(36) default uuid() not null,
            name varchar(31)                not null
        );

        create table MSTR_ROLE_DEPLOY
        (
            id             varchar(36) default uuid() not null
                primary key,
            name           varchar(127)               null,
            description    varchar(255)               null,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            update_user_id varchar(36)                null,
            update_time    timestamp                  null,
            status         int         default 1      null,
            org_id         varchar(36)                null,
            constraint FK_MSTR_FOLDER_TO_MSTR_ROLE_DEPLOY_1
                foreign key (org_id) references MSTR_FOLDER (id)
        );

        create table MSTR_FOLDER_IN_ROLE_DEPLOY
        (
            id             varchar(36) default uuid() not null
                primary key,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            org_id         varchar(36)                not null,
            deploy_id      varchar(36)                not null,
            constraint FK_MSTR_FOLDER_TO_MSTR_FOLDER_IN_ROLE_DEPLOY_1
                foreign key (org_id) references MSTR_FOLDER (id),
            constraint FK_MSTR_ROLE_DEPLOY_TO_MSTR_FOLDER_IN_ROLE_DEPLOY_1
                foreign key (deploy_id) references MSTR_ROLE_DEPLOY (id)
        );

        create table MSTR_ROLE_TYPE
        (
            id          varchar(36) default uuid() not null
                primary key,
            description varchar(255)               null,
            name        varchar(255)               not null,
            selector    varchar(255)               null
        );

        create table MSTR_ROLE_CATEGORY
        (
            id          varchar(36) default uuid() not null
                primary key,
            description varchar(255)               null,
            name        varchar(255)               not null,
            type_id     varchar(36)                not null,
            selector    varchar(255)               not null,
            constraint FK_MSTR_ROLE_TYPE_TO_MSTR_ROLE_CATEGORY_1
                foreign key (type_id) references MSTR_ROLE_TYPE (id)
        );

        create table MSTR_ROLE
        (
            id             varchar(36) default uuid() not null
                primary key,
            name           varchar(127)               null,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            update_user_id varchar(36)                null,
            update_time    timestamp                  null,
            description    varchar(255)               null,
            selector       varchar(255)               not null,
            status         int         default 1      not null,
            category_id    varchar(36)                not null,
            open_org       int         default 0      null,
            open_folder    int         default 0      null,
            open_workspace int         default 0      null,
            role_type_id   varchar(36)                null,
            constraint FK_MSTR_ROLE_CATEGORY_TO_MSTR_ROLE_1
                foreign key (category_id) references MSTR_ROLE_CATEGORY (id),
            constraint MSTR_ROLE_MSTR_ROLE_TYPE_id_fk
                foreign key (role_type_id) references MSTR_ROLE_TYPE (id)
        );

        create table MSTR_AUTHORITY_IN_ROLE
        (
            id             varchar(36) default uuid() not null
                primary key,
            role_id        varchar(36)                not null,
            authority_id   varchar(36)                not null,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            status         int         default 0      null,
            constraint MSTR_AUTHORITY_IN_ROLE_MSTR_AUTHORITY_null_fk
                foreign key (authority_id) references MSTR_AUTHORITY (id),
            constraint MSTR_AUTHORITY_IN_ROLE_MSTR_ROLE_null_fk
                foreign key (role_id) references MSTR_ROLE (id)
        );

        create table MSTR_ROLE_DEPLOYED
        (
            id             varchar(36) default uuid() not null
                primary key,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            deploy_id      varchar(36)                not null,
            role_id        varchar(36)                not null,
            constraint MSTR_ROLE_DEPLOYED_pk
                unique (deploy_id, role_id),
            constraint FK_MSTR_ROLE_DEPLOY_TO_MSTR_DEPLOYED_ROLE_1
                foreign key (deploy_id) references MSTR_ROLE_DEPLOY (id),
            constraint FK_MSTR_ROLE_TO_MSTR_DEPLOYED_ROLE_1
                foreign key (role_id) references MSTR_ROLE (id)
        );

        create table MSTR_SECTION_IN_TEMPLATE_REQUEST_OF_SERVICE
        (
            id                             varchar(36) default uuid() not null,
            name                           varchar(127)               null,
            description                    varchar(255)               null,
            create_user_id                 varchar(36)                null,
            create_time                    timestamp                  null,
            update_user_id                 varchar(36)                null,
            update_time                    timestamp                  null,
            status                         int         default 0      null,
            template_request_of_service_id varchar(36)                not null
        );

        create table MSTR_SELECT_FIELD
        (
            id             varchar(36) default uuid() not null,
            name           varchar(127)               null,
            description    varchar(255)               null,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            update_user_id varchar(36)                null,
            update_time    timestamp                  null,
            status         int         default 0      null
        );

        create table MSTR_SERVICE_CATALOG
        (
            id             varchar(36) default uuid() not null,
            name           varchar(127)               null,
            description    varchar(255)               null,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            update_user_id varchar(36)                null,
            update_time    timestamp                  null,
            status         int         default 0      null
        );

        create table MSTR_SERVICE_OBJECT
        (
            id                              varchar(36)  default uuid()                             not null
                primary key,
            name                            varchar(127)                                            null,
            description                     varchar(255)                                            null,
            create_user_id                  varchar(36)                                             null,
            create_time                     timestamp                                               null,
            update_user_id                  varchar(36)                                             null,
            update_time                     timestamp                                               null,
            status                          int          default 0                                  null,
            file_path                       varchar(255)                                            null,
            image_path                      varchar(255) default 'https://placeimg.com/100/100/any' not null,
            platform_id                     varchar(36)  default uuid()                             not null,
            type_of_service_object_build_id varchar(36)                                             null,
            type_of_service_object_id       varchar(36)                                             null,
            category_id                     varchar(36)                                             not null,
            yaml                            text                                                    null,
            use_count                       int          default 0                                  null,
            type                            varchar(127)                                            null
        );

        create table MSTR_SERVICE_OBJECT_IN_SERVICE_CATALOG
        (
            id                 varchar(36) default uuid()              not null,
            service_catalog_id varchar(36)                             not null,
            service_object_id  varchar(36)                             not null,
            create_time        timestamp   default current_timestamp() null,
            constraint SERVICE_CATALOG_ID_SERVICE_OBJECT_ID
                unique (service_catalog_id, service_object_id)
        );

        create table MSTR_SERVICE_REQUEST
        (
            id               varchar(36) default uuid() not null,
            name             varchar(127)               null,
            status           int         default 0      null,
            create_time      timestamp                  null,
            end_time         timestamp                  null,
            requester_id     varchar(36)                not null,
            manager_id       varchar(36)                null,
            description      text                       null,
            cidr             varchar(127)               null,
            solution_id      varchar(36)                not null,
            resource_type_id varchar(36)                not null
        );

        create table MSTR_SOLUTION
        (
            id              varchar(36) default uuid() not null
                primary key,
            name            varchar(127)               not null,
            create_user_id  varchar(36)                null,
            create_time     datetime                   null,
            update_user_id  varchar(36)                null,
            update_time     datetime                   null,
            description     varchar(255)               null,
            status          int                        null,
            base_user_path  varchar(255)               null,
            base_admin_path varchar(255)               null
        );

        create table MSTR_ENDPOINT_SERVICE_IN_SOLUTION
        (
            service     varchar(127) not null,
            solution_id varchar(36)  not null,
            primary key (service, solution_id),
            constraint FK_MSTR_ENDPOINT_SERVICE_TO_MSTR_ENDPOINT_SERVICE_IN_SOLUTION_1
                foreign key (service) references MSTR_ENDPOINT_SERVICE (name),
            constraint MSTR_ENDPOINT_SERVICE_IN_SOLUTION_MSTR_SOLUTION_null_fk
                foreign key (solution_id) references MSTR_SOLUTION (id)
        );

        create table MSTR_SOLUTION_IN_WORKSPACE
        (
            id           varchar(36) default uuid() not null,
            name         varchar(127)               not null,
            workspace_id varchar(36)                not null,
            solution_id  varchar(36)                not null
        );

        create table MSTR_TAG
        (
            id             varchar(36) default uuid() not null,
            name           varchar(127)               null,
            description    varchar(255)               null,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            update_user_id varchar(36)                null,
            update_time    timestamp                  null,
            status         int         default 0      null
        );

        create table MSTR_TAG_IN_SERVICE_OBJECT
        (
            id                varchar(36) default uuid()              not null
                primary key,
            service_object_id varchar(36)                             not null,
            tag_id            varchar(36)                             not null,
            create_time       timestamp   default current_timestamp() null
        );

        create table MSTR_TEMPLATE_REQUEST_OF_SERVICE
        (
            id             varchar(36) default uuid() not null,
            name           varchar(127)               null,
            description    varchar(255)               null,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            update_user_id varchar(36)                null,
            update_time    timestamp                  null,
            status         int         default 0      null
        );

        create table MSTR_TEXT_FIELD
        (
            id             varchar(36) default uuid() not null,
            name           varchar(127)               null,
            description    varchar(255)               null,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            update_user_id varchar(36)                null,
            update_time    timestamp                  null,
            status         int         default 0      null
        );

        create table MSTR_TYPE_OF_FIELD
        (
            id             varchar(36) default uuid() not null,
            name           varchar(127)               null,
            description    varchar(255)               null,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            update_user_id varchar(36)                null,
            update_time    timestamp                  null,
            status         int         default 0      null,
            `order`        int                        null
        );

        create table MSTR_TYPE_OF_SERVICE_OBJECT
        (
            id             varchar(36) default uuid() not null,
            name           varchar(127)               null,
            description    varchar(255)               null,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            update_user_id varchar(36)                null,
            update_time    timestamp                  null,
            status         int         default 0      null
        );

        create table MSTR_TYPE_OF_SERVICE_OBJECT_BUILD
        (
            id             varchar(36) default uuid() not null,
            name           varchar(127)               null,
            description    varchar(255)               null,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            update_user_id varchar(36)                null,
            update_time    timestamp                  null,
            status         int         default 0      null
        );

        create table MSTR_USER_GROUP
        (
            id             varchar(36) default uuid() not null
                primary key,
            name           varchar(127)               not null,
            description    text                       null,
            org_id         varchar(36)                not null,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            update_user_id varchar(36)                null,
            update_time    timestamp                  null,
            status         int         default 1      null,
            group_email    varchar(255)               not null
        );

        create index MSTR_USER_GROUP_create_time_index
            on MSTR_USER_GROUP (create_time);

        create table MSTR_USER_GROUP_FOLDER_ROLE
        (
            id               varchar(36) default uuid() not null
                primary key,
            create_user_id   varchar(36)                null,
            create_time      timestamp                  null,
            user_group_id    varchar(36)                not null,
            deployed_role_id varchar(36)                not null,
            folder_id        varchar(36)                not null,
            constraint MSTR_USER_GROUP_FOLDER_ROLE_pk
                unique (folder_id, user_group_id, deployed_role_id),
            constraint FK_MSTR_DEPLOYED_ROLE_TO_MSTR_USER_GROUP_FOLDER_ROLE_1
                foreign key (deployed_role_id) references MSTR_ROLE_DEPLOYED (id),
            constraint FK_MSTR_FOLDER_TO_MSTR_USER_GROUP_FOLDER_ROLE_1
                foreign key (folder_id) references MSTR_FOLDER (id),
            constraint FK_MSTR_USER_GROUP_TO_MSTR_USER_GROUP_FOLDER_ROLE_1
                foreign key (user_group_id) references MSTR_USER_GROUP (id)
        );

        create table MSTR_USER_IN_FOLDER
        (
            id             varchar(36) default uuid() not null
                primary key,
            user_id        varchar(36)                not null,
            folder_id      varchar(36)                not null,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            update_user_id varchar(36)                null,
            update_time    timestamp                  null,
            name           varchar(127)               null,
            description    text                       null,
            status         tinyint     default 0      null,
            is_guest       tinyint(1)                 null,
            is_org         tinyint(1)                 null,
            constraint MSTR_USER_IN_FOLDER_MSTR_FOLDER_null_fk
                foreign key (folder_id) references MSTR_FOLDER (id)
        );

        create table MSTR_USER_FOLDER_ROLE
        (
            id                varchar(36) default uuid() not null
                primary key,
            create_user_id    varchar(36)                null,
            create_time       timestamp                  null,
            folder_id         varchar(36)                not null,
            user_in_folder_id varchar(36)                not null,
            deployed_role_id  varchar(36)                not null,
            constraint MSTR_USER_FOLDER_ROLE_pk
                unique (folder_id, user_in_folder_id, deployed_role_id),
            constraint FK_MSTR_DEPLOYED_ROLE_TO_MSTR_USER_FOLDER_ROLE_1
                foreign key (deployed_role_id) references MSTR_ROLE_DEPLOYED (id),
            constraint FK_MSTR_FOLDER_TO_MSTR_USER_FOLDER_ROLE_1
                foreign key (folder_id) references MSTR_FOLDER (id),
            constraint FK_MSTR_USER_IN_FOLDER_TO_MSTR_USER_FOLDER_ROLE_1
                foreign key (user_in_folder_id) references MSTR_USER_IN_FOLDER (id)
        );

        create index MSTR_USER_IN_FOLDER_create_time_index
            on MSTR_USER_IN_FOLDER (create_time);

        create table MSTR_USER_IN_GROUP
        (
            id             varchar(36) default uuid() not null
                primary key,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            status         int         default 0      null,
            user_id        varchar(36)                not null,
            user_group_id  varchar(36) default uuid() not null,
            constraint FK_MSTR_USER_GROUP_TO_MSTR_USER_IN_GROUP_1
                foreign key (user_group_id) references MSTR_USER_GROUP (id)
        );

        create table MSTR_WORKFLOW
        (
            id               varchar(36) default uuid()              not null,
            name             varchar(127)                            null,
            description      varchar(255)                            null,
            create_user_id   varchar(36)                             null,
            create_time      timestamp   default current_timestamp() null,
            update_user_id   varchar(36)                             null,
            update_time      timestamp   default current_timestamp() null on update current_timestamp(),
            status           int         default 0                   null,
            next_workflow_id varchar(36)                             null,
            step             int                                     null
        );

        create table MSTR_WORKFLOW_IN_REQUEST_OF_SERVICE_OBJECT
        (
            id                           varchar(36) default uuid()              not null,
            request_of_service_object_id varchar(36)                             not null,
            workflow_id                  varchar(36)                             not null,
            create_time                  timestamp   default current_timestamp() null
        );

        create table MSTR_WORKSPACE
        (
            id             varchar(36) default uuid() not null
                primary key,
            name           varchar(127)               not null,
            description    text                       null,
            folder_id      varchar(36)                not null,
            create_user_id varchar(36)                null,
            create_time    timestamp                  null,
            update_user_id varchar(36)                null,
            update_time    timestamp                  null,
            status         int         default 0      null,
            org_id         varchar(36)                null,
            constraint MSTR_WORKSPACE__org_id__name
                unique (org_id, name)
        );

        create table MSTR_USER_GROUP_WORKSPACE_ROLE
        (
            id               varchar(36) default uuid() not null
                primary key,
            create_user_id   varchar(36)                null,
            create_time      timestamp                  null,
            user_group_id    varchar(36)                not null,
            deployed_role_id varchar(36)                not null,
            workspace_id     varchar(36)                not null,
            constraint MSTR_USER_GROUP_WORKSPACE_ROLE_pk
                unique (workspace_id, user_group_id, deployed_role_id),
            constraint FK_MSTR_DEPLOYED_ROLE_TO_CopyOfMSTR_USER_GROUP_FOLDER_ROLE_1
                foreign key (deployed_role_id) references MSTR_ROLE_DEPLOYED (id),
            constraint FK_MSTR_USER_GROUP_TO_CopyOfMSTR_USER_GROUP_FOLDER_ROLE_1
                foreign key (user_group_id) references MSTR_USER_GROUP (id),
            constraint FK_MSTR_WORKSPACE_TO_CopyOfMSTR_USER_GROUP_FOLDER_ROLE_1
                foreign key (workspace_id) references MSTR_WORKSPACE (id)
        );

        create table MSTR_USER_WORKSPACE_ROLE
        (
            id                varchar(36) default uuid() not null
                primary key,
            create_user_id    varchar(36)                null,
            create_time       timestamp                  null,
            workspace_id      varchar(36)                not null,
            user_in_folder_id varchar(36)                not null,
            deployed_role_id  varchar(36)                not null,
            constraint MSTR_USER_WORKSPACE_ROLE_pk
                unique (deployed_role_id, user_in_folder_id, workspace_id),
            constraint FK_MSTR_DEPLOYED_ROLE_TO_MSTR_USER_WORKSPACE_ROLE_1
                foreign key (deployed_role_id) references MSTR_ROLE_DEPLOYED (id),
            constraint FK_MSTR_USER_IN_FOLDER_TO_MSTR_USER_WORKSPACE_ROLE_1
                foreign key (user_in_folder_id) references MSTR_USER_IN_FOLDER (id),
            constraint FK_MSTR_WORKSPACE_TO_MSTR_USER_WORKSPACE_ROLE_1
                foreign key (workspace_id) references MSTR_WORKSPACE (id)
        );

        create index MSTR_WORKSPACE_create_time_index
            on MSTR_WORKSPACE (create_time);

        create table MSTR_WORKSPACE_CONNECTION
        (
            id           varchar(36)  default uuid()              not null
                primary key,
            workspace_id varchar(36)                              not null,
            provider_id  varchar(36)                              not null,
            tenant_name  varchar(127) default 'Default'           not null,
            tenant_id    varchar(36)                              null,
            create_time  timestamp    default current_timestamp() null,
            constraint workspace_id
                unique (workspace_id, provider_id),
            constraint MSTR_WORKSPACE_CONNECTION_MSTR_PROVIDER_null_fk
                foreign key (provider_id) references MSTR_PROVIDER (id)
                    on delete cascade,
            constraint MSTR_WORKSPACE_CONNECTION_MSTR_WORKSPACE_null_fk
                foreign key (workspace_id) references MSTR_WORKSPACE (id)
                    on delete cascade
        );
        
        -- QRTZ로 시작하는 테이블은 maestro-event-pusher에 필요한 쿼리
        -- Quartz Job 정보를 저장하는 테이블
        CREATE TABLE QRTZ_JOB_DETAILS
        (
            SCHED_NAME        VARCHAR(120) NOT NULL COMMENT '스케줄러 이름',
            JOB_NAME          VARCHAR(200) NOT NULL COMMENT 'Job 이름',
            JOB_GROUP         VARCHAR(200) NOT NULL COMMENT 'Job 그룹',
            DESCRIPTION       VARCHAR(250) NULL COMMENT '설명',
            JOB_CLASS_NAME    VARCHAR(250) NOT NULL COMMENT 'Job 클래스 이름',
            IS_DURABLE        VARCHAR(1)   NOT NULL COMMENT '지속 가능 여부',
            IS_NONCONCURRENT  VARCHAR(1)   NOT NULL COMMENT '동시 실행 불가 여부',
            IS_UPDATE_DATA    VARCHAR(1)   NOT NULL COMMENT '데이터 업데이트 여부',
            REQUESTS_RECOVERY VARCHAR(1)   NOT NULL COMMENT '복구 요청 여부',
            JOB_DATA          BLOB NULL COMMENT 'Job 데이터',
            PRIMARY KEY (SCHED_NAME, JOB_NAME, JOB_GROUP)
        ) COMMENT 'Quartz Job 정보';

        -- Quartz 트리거 정보를 저장하는 테이블
        CREATE TABLE QRTZ_TRIGGERS
        (
            SCHED_NAME     VARCHAR(120) NOT NULL COMMENT '스케줄러 이름',
            TRIGGER_NAME   VARCHAR(200) NOT NULL COMMENT '트리거 이름',
            TRIGGER_GROUP  VARCHAR(200) NOT NULL COMMENT '트리거 그룹',
            JOB_NAME       VARCHAR(200) NOT NULL COMMENT 'Job 이름',
            JOB_GROUP      VARCHAR(200) NOT NULL COMMENT 'Job 그룹',
            DESCRIPTION    VARCHAR(250) NULL COMMENT '설명',
            NEXT_FIRE_TIME BIGINT(13) NULL COMMENT '다음 실행 시간',
            PREV_FIRE_TIME BIGINT(13) NULL COMMENT '이전 실행 시간',
            PRIORITY       INTEGER NULL COMMENT '우선순위',
            TRIGGER_STATE  VARCHAR(16)  NOT NULL COMMENT '트리거 상태',
            TRIGGER_TYPE   VARCHAR(8)   NOT NULL COMMENT '트리거 타입',
            START_TIME     BIGINT(13) NOT NULL COMMENT '시작 시간',
            END_TIME       BIGINT(13) NULL COMMENT '종료 시간',
            CALENDAR_NAME  VARCHAR(200) NULL COMMENT '캘린더 이름',
            MISFIRE_INSTR  SMALLINT NULL COMMENT '미스파이어 지시자',
            JOB_DATA       BLOB NULL COMMENT 'Job 데이터',
            PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
            FOREIGN KEY (SCHED_NAME, JOB_NAME, JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS (SCHED_NAME, JOB_NAME, JOB_GROUP)
        ) COMMENT 'Quartz 트리거 정보';

        -- Quartz Simple 트리거 정보를 저장하는 테이블
        CREATE TABLE QRTZ_SIMPLE_TRIGGERS
        (
            SCHED_NAME      VARCHAR(120) NOT NULL COMMENT '스케줄러 이름',
            TRIGGER_NAME    VARCHAR(200) NOT NULL COMMENT '트리거 이름',
            TRIGGER_GROUP   VARCHAR(200) NOT NULL COMMENT '트리거 그룹',
            REPEAT_COUNT    INTEGER      NOT NULL COMMENT '반복 횟수',
            REPEAT_INTERVAL BIGINT(13) NOT NULL COMMENT '반복 간격',
            TIMES_TRIGGERED INTEGER      NOT NULL COMMENT '트리거 실행 횟수',
            PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
            FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
        ) COMMENT 'Quartz Simple 트리거 정보';

        -- Quartz Cron 트리거 정보를 저장하는 테이블
        CREATE TABLE QRTZ_CRON_TRIGGERS
        (
            SCHED_NAME      VARCHAR(120) NOT NULL COMMENT '스케줄러 이름',
            TRIGGER_NAME    VARCHAR(200) NOT NULL COMMENT '트리거 이름',
            TRIGGER_GROUP   VARCHAR(200) NOT NULL COMMENT '트리거 그룹',
            CRON_EXPRESSION VARCHAR(120) NOT NULL COMMENT 'Cron 표현식',
            TIME_ZONE_ID    VARCHAR(80) COMMENT '시간대 식별자',
            PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
            FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
        ) COMMENT 'Quartz Cron 트리거 정보';

        -- Quartz Simple 속성 트리거 정보를 저장하는 테이블
        CREATE TABLE QRTZ_SIMPROP_TRIGGERS
        (
            SCHED_NAME    VARCHAR(120) NOT NULL COMMENT '스케줄러 이름',
            TRIGGER_NAME  VARCHAR(200) NOT NULL COMMENT '트리거 이름',
            TRIGGER_GROUP VARCHAR(200) NOT NULL COMMENT '트리거 그룹',
            STR_PROP_1    VARCHAR(512) NULL COMMENT '문자열 속성 1',
            STR_PROP_2    VARCHAR(512) NULL COMMENT '문자열 속성 2',
            STR_PROP_3    VARCHAR(512) NULL COMMENT '문자열 속성 3',
            INT_PROP_1    INT NULL COMMENT '정수 속성 1',
            INT_PROP_2    INT NULL COMMENT '정수 속성 2',
            LONG_PROP_1   BIGINT NULL COMMENT '긴 정수 속성 1',
            LONG_PROP_2   BIGINT NULL COMMENT '긴 정수 속성 2',
            DEC_PROP_1    NUMERIC(13, 4) NULL COMMENT '실수 속성 1',
            DEC_PROP_2    NUMERIC(13, 4) NULL COMMENT '실수 속성 2',
            BOOL_PROP_1   VARCHAR(1) NULL COMMENT '부울 속성 1',
            BOOL_PROP_2   VARCHAR(1) NULL COMMENT '부울 속성 2',
            PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
            FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
        ) COMMENT 'Quartz Simple 속성 트리거 정보';

        -- Quartz BLOB 트리거 정보를 저장하는 테이블
        CREATE TABLE QRTZ_BLOB_TRIGGERS
        (
            SCHED_NAME    VARCHAR(120) NOT NULL COMMENT '스케줄러 이름',
            TRIGGER_NAME  VARCHAR(200) NOT NULL COMMENT '트리거 이름',
            TRIGGER_GROUP VARCHAR(200) NOT NULL COMMENT '트리거 그룹',
            BLOB_DATA     BLOB NULL COMMENT 'BLOB 데이터',
            PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
            FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
        ) COMMENT 'Quartz BLOB 트리거 정보';

        -- Quartz 캘린더 정보를 저장하는 테이블
        CREATE TABLE QRTZ_CALENDARS
        (
            SCHED_NAME    VARCHAR(120) NOT NULL COMMENT '스케줄러 이름',
            CALENDAR_NAME VARCHAR(200) NOT NULL COMMENT '캘린더 이름',
            CALENDAR      BLOB         NOT NULL COMMENT '캘린더 데이터',
            PRIMARY KEY (SCHED_NAME, CALENDAR_NAME)
        ) COMMENT 'Quartz 캘린더 정보';

        -- Quartz 일시정지된 트리거 그룹 정보를 저장하는 테이블
        CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS
        (
            SCHED_NAME    VARCHAR(120) NOT NULL COMMENT '스케줄러 이름',
            TRIGGER_GROUP VARCHAR(200) NOT NULL COMMENT '트리거 그룹',
            PRIMARY KEY (SCHED_NAME, TRIGGER_GROUP)
        ) COMMENT 'Quartz 일시정지된 트리거 그룹 정보';

        -- Quartz 실행된 트리거 정보를 저장하는 테이블
        CREATE TABLE QRTZ_FIRED_TRIGGERS
        (
            SCHED_NAME        VARCHAR(120) NOT NULL COMMENT '스케줄러 이름',
            ENTRY_ID          VARCHAR(95)  NOT NULL COMMENT '엔트리 ID',
            TRIGGER_NAME      VARCHAR(200) NOT NULL COMMENT '트리거 이름',
            TRIGGER_GROUP     VARCHAR(200) NOT NULL COMMENT '트리거 그룹',
            INSTANCE_NAME     VARCHAR(200) NOT NULL COMMENT '인스턴스 이름',
            FIRED_TIME        BIGINT(13) NOT NULL COMMENT '실행 시간',
            SCHED_TIME        BIGINT(13) NOT NULL COMMENT '스케줄 시간',
            PRIORITY          INTEGER      NOT NULL COMMENT '우선순위',
            STATE             VARCHAR(16)  NOT NULL COMMENT '상태',
            JOB_NAME          VARCHAR(200) NULL COMMENT 'Job 이름',
            JOB_GROUP         VARCHAR(200) NULL COMMENT 'Job 그룹',
            IS_NONCONCURRENT  VARCHAR(1) NULL COMMENT '동시 실행 불가 여부',
            REQUESTS_RECOVERY VARCHAR(1) NULL COMMENT '복구 요청 여부',
            PRIMARY KEY (SCHED_NAME, ENTRY_ID)
        ) COMMENT 'Quartz 실행된 트리거 정보';

        -- Quartz 스케줄러 상태 정보를 저장하는 테이블
        CREATE TABLE QRTZ_SCHEDULER_STATE
        (
            SCHED_NAME        VARCHAR(120) NOT NULL COMMENT '스케줄러 이름',
            INSTANCE_NAME     VARCHAR(200) NOT NULL COMMENT '인스턴스 이름',
            LAST_CHECKIN_TIME BIGINT(13) NOT NULL COMMENT '마지막 체크인 시간',
            CHECKIN_INTERVAL  BIGINT(13) NOT NULL COMMENT '체크인 간격',
            PRIMARY KEY (SCHED_NAME, INSTANCE_NAME)
        ) COMMENT 'Quartz 스케줄러 상태 정보';

        -- Quartz 락 정보를 저장하는 테이블
        CREATE TABLE QRTZ_LOCKS
        (
            SCHED_NAME VARCHAR(120) NOT NULL COMMENT '스케줄러 이름',
            LOCK_NAME  VARCHAR(40)  NOT NULL COMMENT '락 이름',
            PRIMARY KEY (SCHED_NAME, LOCK_NAME)
        ) COMMENT 'Quartz 락 정보';

